[build-system]
requires = ["setuptools~=67.0"]
build-backend = "setuptools.build_meta"

[project]
name = "test"
version = "0.0.0"  # Placeholder - actual versioning handled by build system
description = "test cookiecutter"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "vuit-pythena>=2.0.0",
    "click>=8.1.3",
    "pygelf>=0.4.0",
    "pyyaml",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.1",
    "pytest-mock",
    "pytest-cov",
    "ruff",
]

[project.scripts]
test = "main:main"

[tool.setuptools]
package-dir = {"" = "src/python"}

[tool.pyright]
extraPaths = ["src/python"]
pythonVersion = "3.10"
typeCheckingMode = "basic"

[tool.pytest.ini_options]
pythonpath = ["src/python"]
testpaths = ["src/test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow-running tests",
]

[tool.ruff]
line-length = 120
target-version = "py310"
src = ["src/python"]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
source = ["src/python"]
omit = [
    "*/test/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"